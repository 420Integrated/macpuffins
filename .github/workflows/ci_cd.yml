name: CI/CD
on: [push, pull_request]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_S3_BUCKET: 'neblio-build-staging'
  AWS_S3_ENDPOINT: 'https://ams3.digitaloceanspaces.com'

jobs:
  linux_daemon:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v1
    - name: ccache
      uses: actions/cache@v1
      with:
        path: .ccache
        key: ${{ runner.OS }}--linux_daemon-${{ github.sha }}
        restore-keys: |
          ${{ runner.OS }}--linux_daemon-
    - name: Build nebliod for Linux
      run: |
        python -u ci_scripts/test_linux-daemon.py
        echo ::set-env name=RELEASE_TAG::$(echo ${GITHUB_REF:10})
    - name: Build Upload to S3
      uses: jakejarvis/s3-sync-action@v0.5.0
      with:
        args: --acl public-read
    - name: If Release, Upload Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: AButler/upload-release-assets@v1.0
      with:
        files: ${{ env.SOURCE_PATH }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        release-tag: ${{ env.RELEASE_TAG }}


  linux_wallet:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v1
    - name: ccache
      uses: actions/cache@v1
      with:
        path: .ccache
        key: ${{ runner.OS }}--linux_wallet-${{ github.sha }}
        restore-keys: |
          ${{ runner.OS }}--linux_wallet-
    - name: Build neblio-Qt for Linux
      run: |
        python -u ci_scripts/test_linux-gui_wallet.py
        echo ::set-env name=RELEASE_TAG::$(echo ${GITHUB_REF:10})
    - name: Build Upload to S3
      uses: jakejarvis/s3-sync-action@v0.5.0
      with:
        args: --acl public-read
    - name: If Release, Upload Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: AButler/upload-release-assets@v1.0
      with:
        files: ${{ env.SOURCE_PATH }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        release-tag: ${{ env.RELEASE_TAG }}


  linux_wallet_test:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v1
    - name: ccache
      uses: actions/cache@v1
      with:
        path: .ccache
        key: ${{ runner.OS }}--linux_wallet_test-${{ github.sha }}
        restore-keys: |
          ${{ runner.OS }}--linux_wallet_test-
    - name: Build neblio-Qt for Linux and Run Tests
      run: |
        python -u ci_scripts/test_linux-gui_wallet.py -t


  windows_x86:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v1
    - name: ccache
      uses: actions/cache@v1
      with:
        path: .ccache
        key: ${{ runner.OS }}--windows_x86-${{ github.sha }}
        restore-keys: |
          ${{ runner.OS }}--windows_x86-
    - name: Build neblio-Qt for Windows x86
      run: |
        python -u ci_scripts/test_win_x86-gui_wallet.py
        echo ::set-env name=RELEASE_TAG::$(echo ${GITHUB_REF:10})
    - name: Build Upload to S3
      uses: jakejarvis/s3-sync-action@v0.5.0
      with:
        args: --acl public-read
    - name: If Release, Upload Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: AButler/upload-release-assets@v1.0
      with:
        files: ${{ env.SOURCE_PATH }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        release-tag: ${{ env.RELEASE_TAG }}


  windows_x86_64:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v1
    - name: ccache
      uses: actions/cache@v1
      with:
        path: .ccache
        key: ${{ runner.OS }}--windows_x86_64-${{ github.sha }}
        restore-keys: |
          ${{ runner.OS }}--windows_x86_64-
    - name: Build neblio-Qt for Windows x86_64
      run: |
        python -u ci_scripts/test_win_x86_64-gui_wallet.py
    - name: Build Upload
      uses: jakejarvis/s3-sync-action@v0.5.0
      with:
        args: --acl public-read


  osx:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: ccache
      uses: actions/cache@v1
      with:
        path: .ccache
        key: ${{ runner.OS }}--osx-${{ github.sha }}
        restore-keys: |
          ${{ runner.OS }}--osx-
    - name: Build neblio-Qt for macOS
      run: |
        python -u ci_scripts/test_osx-gui_wallet.py
        echo ::set-env name=RELEASE_TAG::$(echo ${GITHUB_REF:10})
    - name: Build Upload to S3
      run: |
        brew fetch --retry s3cmd
        brew install s3cmd --force
        brew unlink s3cmd
        brew link --force --overwrite s3cmd
        s3cmd --access_key=$AWS_ACCESS_KEY_ID --secret_key=$AWS_SECRET_ACCESS_KEY --acl-public --host=ams3.digitaloceanspaces.com --host-bucket='%(bucket)s.ams3.digitaloceanspaces.com' --no-preserve put $SOURCE_PATH s3://neblio-build-staging
    - name: If Release, Upload Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: AButler/upload-release-assets@v1.0
      with:
        files: ${{ env.SOURCE_PATH }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        release-tag: ${{ env.RELEASE_TAG }}


  osx_test:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: ccache
      uses: actions/cache@v1
      with:
        path: .ccache
        key: ${{ runner.OS }}--osx_test-${{ github.sha }}
        restore-keys: |
          ${{ runner.OS }}--osx_test-
    - name: Build neblio-Qt for macOS and Run Tests
      run: |
        python -u ci_scripts/test_osx-gui_wallet.py -t


  rpi_wallet:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v1
    - name: ccache
      uses: actions/cache@v1
      with:
        path: .ccache
        key: ${{ runner.OS }}--rpi_wallet-${{ github.sha }}
        restore-keys: |
          ${{ runner.OS }}--rpi_wallet-
    - name: Set target_v env var
      run: |
        echo "::set-env name=target_v::rpi_wallet"
    - name: Build neblio-Qt for Raspberry Pi
      run: |
        python -u ci_scripts/test_rpi-daemon-gui.py
        echo ::set-env name=RELEASE_TAG::$(echo ${GITHUB_REF:10})
    - name: Build Upload to S3
      uses: jakejarvis/s3-sync-action@v0.5.0
      with:
        args: --acl public-read
    - name: If Release, Upload Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: AButler/upload-release-assets@v1.0
      with:
        files: ${{ env.SOURCE_PATH }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        release-tag: ${{ env.RELEASE_TAG }}


  rpi_wallet_test:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v1
    - name: ccache
      uses: actions/cache@v1
      with:
        path: .ccache
        key: ${{ runner.OS }}--rpi_wallet_test-${{ github.sha }}
        restore-keys: |
          ${{ runner.OS }}--rpi_wallet_test-
    - name: Set target_v env var
      run: |
        echo "::set-env name=target_v::rpi_wallet_test"
    - name: Build neblio-Qt for Raspberry Pi and Run Tests
      run: |
        python -u ci_scripts/test_rpi-daemon-gui.py -t


  rpi_daemon:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v1
    - name: ccache
      uses: actions/cache@v1
      with:
        path: .ccache
        key: ${{ runner.OS }}--rpi_daemon-${{ github.sha }}
        restore-keys: |
          ${{ runner.OS }}--rpi_daemon-
    - name: Set target_v env var
      run: |
        echo "::set-env name=target_v::rpi_daemon"
    - name: Build neblio-Qt for Raspberry Pi
      run: |
        python -u ci_scripts/test_rpi-daemon-gui.py
        echo ::set-env name=RELEASE_TAG::$(echo ${GITHUB_REF:10})
    - name: Build Upload to S3
      uses: jakejarvis/s3-sync-action@v0.5.0
      with:
        args: --acl public-read
    - name: If Release, Upload Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: AButler/upload-release-assets@v1.0
      with:
        files: ${{ env.SOURCE_PATH }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        release-tag: ${{ env.RELEASE_TAG }}


